---
title: "Comparing Prameters"
format: html
editor: visual
---

# MOFA

```{r}
suppressMessages(c(library(tidyverse),
                   library(plotly)))
```

```{r}
mofa_comparison <- read.table("~/R/Data/mofa_comparison.txt", header = TRUE, sep = " ", quote = "\"", stringsAsFactors = FALSE)

```

## Scale Data

mean var RNA:

```         
1.209184
```

mean var ATAC:

```         
0.5261105
```

Differences between scaling data or not

```{r}
diffs <- data.frame(
  num_factor_diff = mofa_comparison$num_factor[mofa_comparison$scale_views == TRUE] - mofa_comparison$num_factor[mofa_comparison$scale_views == FALSE],
  mean_sil_score_diff = mofa_comparison$mean_sil_score[mofa_comparison$scale_views == TRUE] - mofa_comparison$mean_sil_score[mofa_comparison$scale_views == FALSE],
  min_sil_score_diff = mofa_comparison$min_sil_score[mofa_comparison$scale_views == TRUE] - mofa_comparison$min_sil_score[mofa_comparison$scale_views == FALSE],
  max_sil_score_diff = mofa_comparison$max_sil_score[mofa_comparison$scale_views == TRUE] - mofa_comparison$max_sil_score[mofa_comparison$scale_views == FALSE],
  mofa_knn_acc_diff = mofa_comparison$mofa_knn_acc[mofa_comparison$scale_views == TRUE] - mofa_comparison$mofa_knn_acc[mofa_comparison$scale_views == FALSE],
  mofa_knn_acc_bal_diff = mofa_comparison$mofa_knn_acc_bal[mofa_comparison$scale_views == TRUE] - mofa_comparison$mofa_knn_acc_bal[mofa_comparison$scale_views == FALSE],
  mofa_rsme_diff = mofa_comparison$mofa_rsme[mofa_comparison$scale_views == TRUE] - mofa_comparison$mofa_rsme[mofa_comparison$scale_views == FALSE]
)

print(diffs)
```

Difference not really big --\> Take the FALSE ones (is the default)

```{r}
mofa_comparison_plot <- mofa_comparison %>% 
                          filter(scale_views == FALSE) %>%
                          select(-c(scale_views, min_sil_score_name)) %>%
                          pivot_longer(-num_factor, names_to = "metric") %>%
                          ggplot(aes(fill = as.factor(num_factor),
                                     x = metric, 
                                     y = value))+
                          geom_bar(position="dodge", stat="identity")

# ggplot(aes(fill = metric, x = num_factor, y = value))+
#                         geom_bar(position="dodge", stat="identity")
ggplotly(mofa_comparison_plot)
```

num_factor 20 or 30 look best

# StabMap

```{r}

stab_comparison <- read.table("~/R/Data/comparison.txt", header = TRUE, sep = " ", quote = "\"", stringsAsFactors = FALSE)

```

```{r}
rbind(
stab_comparison[which.max(stab_comparison$mean_sil_score),],
stab_comparison[which.max(stab_comparison$min_sil_score),],
stab_comparison[which.max(stab_comparison$max_sil_score),],
stab_comparison[which.max(stab_comparison$stab_knn_acc_bal),],
stab_comparison[which.min(stab_comparison$stab_rsme),])
```

```{r}
stab_comparison %>%
  arrange(desc(mean_sil_score))%>%
  top_n( 10, mean_sil_score)
# Seems scale.center scale.scale should be TRUE, medium ncomponents with max maxFeatures

stab_comparison %>%
  arrange(desc(min_sil_score))%>%
  top_n( 10, min_sil_score)

stab_comparison %>%
  arrange(desc(max_sil_score))%>%
  top_n( 10, max_sil_score)
# scale center FALSE, scale.scale TRUE

stab_comparison %>%
  arrange(desc(stab_knn_acc_bal))%>%
  top_n( 10, stab_knn_acc_bal)

stab_comparison %>%
  arrange(stab_rsme)%>%
  top_n( -10, stab_rsme)
# Seems scale.center scale.scale should be FALSE, higher numbers of components and features
```

Taking 50,50,1100,TRUE,TRUE for clustering (RSME could be better so maybe

```         
70                70        1100        FALSE       FALSE
```

for RSME?)
